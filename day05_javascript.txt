지역변수와 전역변수 위치에 유의
전역변수는 밖에서 접근 가능하므로 펑션의 매개변수로 굳이 넣어줄 필요가 없다

리턴값을 2개를 넣으면 마지막에 넣은 값만 리턴된다

대괄호는 배열, 중괄호는 키값과 밸류값이 있는 배열로 변수에 할당하게 된다
ex) const arr = [1,2] > 배열
    const map = {1:10, 2:20} > 키와 밸류

    중괄호로 만든 값은 2가지 방법으로 불러올 수 있다
    document.write(result3['num']+ "<br>");
    document.write(result3.txt+ "<br>");//대괄호와 점 둘 다 사용가능

    펑션이 받는 값이 1개이고, 호출시 값이 2개로 갯수가 맞지 않아도 그냥 호출된다(첫번째 값으로)
    부족할때는 받은 값만 사용 혹은 출력한다. 받는값이 3개인데 2개의 값을 주면 2개로만 연산하거나 출력하는 식

    undefined > 언디파인은 계산할 수 없다

    console.log(arguments.length);
    가변적으로 변수 사용할 수 있는 아규먼츠
    자료형, 값의 수 등을 제한없이 넣을 수 있다.

     (function test(){
            alert("즉시 실행 함수");
        })();


    function sumFunc(x, y) {return x+y;}
    
    //익명함수 사용법
    let sumFunc = function (x, y) { return x+y;}
   
    let sumFunc1 = (x, y) => x+y;
   
    결과적으로 계산을 하는것은 같지만 마지막이 코드가 제일 짧음

    let sumFunc2 = (x, y) => {
        let num = 100;
        x+y;
        return x+y+num;
    }
    
    한줄로는 중괄호{}가 없어도 괜찮지만 아래로 여러줄을 쓰면 필요하고
    중괄호를 쓰면 return을 써야만 값이 출력된다

    const result01 = () => {
        10+20; //중괄호 사용하고 리턴 안써서 답이 도출되지 않음
    }


    const name = document.getElementById("name");//1.해당태그를 가져와
            console.log(name);
          
            name.value = "안녕하세요";//2.값을 넣는다

            name.style = "background: red";
            name.style.background = "skyblue" // 보편적으로 쓰는 방법

    const name1 = document.querySelector("#name2")//아이디값 클래스값을 다 가져옴


     window.onload = () => {
           // alert("onload"); //페이지가 호출되면 자동호출된다
           //document.getElementsByClassName("btn")
           const btn = document.querySelector(".btn");
           console.log(btn)
           btn.addEventListener("dblclick", cinnerTest);
           //첫번재 값이 이벤트호출, 두번째 값이 함수호출
           //아래 onclick과 같은 기능
     }
      <input type = "button" onclick="clickEvent()" value="클릭">
    <!--on을 붙여야 한다. 안붙히고 쓰는 방법으로 위에 있음(addEventListener)-->


     txt.innerHTML = msg; //html형식으로 추가
     txt.innerText = msg; //text형식으로 추가

    ex16 참고
     innerHTML > html 형식의 코드로 가서 
                그 코드의 웹페이지 출력용 값을 이너html을 부른 
                펑션에서 나온 값으로 변경해 출력한다


// let img2 = document.getElementById("myImg")
        //페이지 실행전 실행되어서 값을 못부름
        //실행되는 코드 아래에 입력하면 불러올 수 있음


onload = () =>{ //페이지가 열린다음 실행
            alert("실행222")
            //alert("exevte")
            let img = document.getElementById("myImg");
            img.addEventListener("mouseover", changeFunc01)//함수이름으로 찾아서 출력
           // img.addEventListener("mouseout", () =>{alert("나감")})//직접출력




